name: Run examples
'on':
  push:
    branches:
      - master
  pull_request: {}
defaults:
  run:
    shell: bash
env:
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock
jobs:
  multi-project-config-file:
    name: Multi-project config file
    runs-on: ubuntu-latest
    env:
      TF_ROOT: examples/multi-project-config-file/code
    steps:
      - name: Checkout source code so we can install the action locally
        uses: actions/checkout@v2
      - name: Setup Infracost
        uses: ./setup
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
      - name: Checkout base branch
        uses: actions/checkout@v2
        with: {}
      - name: Generate Infracost cost estimate baseline
        run: |
          infracost breakdown --config-file=${TF_ROOT}/infracost.yml \
                              --format=json \
                              --out-file=/tmp/infracost-base.json
      - name: Checkout PR branch
        uses: actions/checkout@v2
      - name: Replace m5 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
      - name: Replace t2 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
      - name: Generate Infracost diff
        run: |
          infracost diff --config-file=${TF_ROOT}/infracost.yml \
                              --format=json \
                              --compare-to=/tmp/infracost-base.json \
                              --out-file=/tmp/infracost.json
      - name: Post Infracost comment
        run: |-
          infracost comment github --path=/tmp/infracost.json \
          --repo=$GITHUB_REPOSITORY \
          --github-token=${{github.token}} \
          --pull-request=1 \
          --behavior=update \
          --dry-run true \
          > /tmp/infracost_comment.md
      - run: >-
          diff -y ./testdata/multi-project-config-file_comment_golden.md
          /tmp/infracost_comment.md
        name: Check the comment
        if: env.UPDATE_GOLDEN_FILES != 'true'
      - name: Update the golden comment file
        run: >-
          cp /tmp/infracost_comment.md
          ./testdata/multi-project-config-file_comment_golden.md
        if: env.UPDATE_GOLDEN_FILES == 'true'
  multi-project-matrix:
    name: Multi-project matrix
    runs-on: ubuntu-latest
    env:
      TF_ROOT: examples/terraform-project/code
    strategy:
      matrix:
        include:
          - project: dev
            aws_access_key_id_secret: EXAMPLE_DEV_AWS_ACCESS_KEY_ID
            aws_secret_access_key_secret: EXAMPLE_DEV_AWS_SECRET_ACCESS_KEY
          - project: prod
            aws_access_key_id_secret: EXAMPLE_PROD_AWS_ACCESS_KEY_ID
            aws_secret_access_key_secret: EXAMPLE_PROD_AWS_SECRET_ACCESS_KEY
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v2
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.TF_ROOT }}/${{ matrix.project }}
      - name: Generate plan JSON
        run: |
          terraform plan -out=plan.cache
          terraform show -json plan.cache > plan.json
        working-directory: ${{ env.TF_ROOT }}/${{ matrix.project }}
      - name: Setup Infracost
        uses: ./setup
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
      - name: Replace m5 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
      - name: Replace t2 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
      - name: Generate Infracost diff
        run: >-
          infracost diff --path=${TF_ROOT}/${{ matrix.project }}/plan.json
          --format=json --out-file=/tmp/infracost_${{ matrix.project }}.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets[matrix.aws_access_key_id_secret] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[matrix.aws_secret_access_key_secret] }}
      - name: Upload Infracost breakdown
        uses: actions/upload-artifact@v2
        with:
          name: infracost_project_jsons
          path: /tmp/infracost_${{ matrix.project }}.json
    if: github.actor != 'nektos/act'
  multi-project-matrix-merge:
    name: Multi-project matrix merge
    runs-on: ubuntu-latest
    needs:
      - multi-project-matrix
    steps:
      - uses: actions/checkout@v2
      - name: Download all Infracost breakdown files
        uses: actions/download-artifact@v2
        with:
          name: infracost_project_jsons
          path: /tmp
      - name: Setup Infracost
        uses: ./setup
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
      - name: Post Infracost comment
        run: |-
          infracost comment github --path="/tmp/infracost_*.json" \
          --repo=$GITHUB_REPOSITORY \
          --github-token=${{github.token}} \
          --pull-request=1 \
          --behavior=update \
          --dry-run true \
          > /tmp/infracost_comment.md
      - run: >-
          diff -y ./testdata/multi-project-matrix-merge_comment_golden.md
          /tmp/infracost_comment.md
        name: Check the comment
        if: env.UPDATE_GOLDEN_FILES != 'true'
      - name: Update the golden comment file
        run: >-
          cp /tmp/infracost_comment.md
          ./testdata/multi-project-matrix-merge_comment_golden.md
        if: env.UPDATE_GOLDEN_FILES == 'true'
    if: github.actor != 'nektos/act'
  multi-workspace-matrix:
    name: Multi-workspace matrix
    runs-on: ubuntu-latest
    env:
      TF_ROOT: examples/plan-json/multi-workspace-matrix/code
    strategy:
      matrix:
        include:
          - tf_workspace: dev
            aws_access_key_id_secret: EXAMPLE_DEV_AWS_ACCESS_KEY_ID
            aws_secret_access_key_secret: EXAMPLE_DEV_AWS_SECRET_ACCESS_KEY
          - tf_workspace: prod
            aws_access_key_id_secret: EXAMPLE_PROD_AWS_ACCESS_KEY_ID
            aws_secret_access_key_secret: EXAMPLE_PROD_AWS_SECRET_ACCESS_KEY
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v2
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.TF_ROOT }}
      - name: Generate plan JSON
        run: >
          terraform plan -out=${{ matrix.tf_workspace }}-plan.cache
          -var-file=${{ matrix.tf_workspace }}.tfvars

          terraform show -json ${{ matrix.tf_workspace }}-plan.cache > ${{
          matrix.tf_workspace }}-plan.json
        env:
          TF_WORKSPACE: ${{ matrix.tf_workspace }}
        working-directory: ${{ env.TF_ROOT }}
      - name: Setup Infracost
        uses: ./setup
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
      - name: Replace m5 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
      - name: Replace t2 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
      - name: Generate Infracost diff
        run: >-
          infracost diff --path=${TF_ROOT}/${{ matrix.tf_workspace }}-plan.json
          --format=json --out-file=/tmp/infracost_${{ matrix.tf_workspace
          }}.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets[matrix.aws_access_key_id_secret] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[matrix.aws_secret_access_key_secret] }}
      - name: Upload Infracost breakdown
        uses: actions/upload-artifact@v2
        with:
          name: infracost_workspace_jsons
          path: /tmp/infracost_${{ matrix.tf_workspace }}.json
    if: github.actor != 'nektos/act'
  multi-workspace-matrix-merge:
    name: Multi-workspace matrix merge
    runs-on: ubuntu-latest
    needs:
      - multi-workspace-matrix
    steps:
      - uses: actions/checkout@v2
      - name: Download all Infracost breakdown files
        uses: actions/download-artifact@v2
        with:
          name: infracost_workspace_jsons
          path: /tmp
      - name: Setup Infracost
        uses: ./setup
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
      - name: Post Infracost comment
        run: |-
          infracost comment github --path="/tmp/infracost_*.json" \
          --repo=$GITHUB_REPOSITORY \
          --github-token=${{github.token}} \
          --pull-request=1 \
          --behavior=update \
          --dry-run true \
          > /tmp/infracost_comment.md
      - run: >-
          diff -y ./testdata/multi-workspace-matrix-merge_comment_golden.md
          /tmp/infracost_comment.md
        name: Check the comment
        if: env.UPDATE_GOLDEN_FILES != 'true'
      - name: Update the golden comment file
        run: >-
          cp /tmp/infracost_comment.md
          ./testdata/multi-workspace-matrix-merge_comment_golden.md
        if: env.UPDATE_GOLDEN_FILES == 'true'
    if: github.actor != 'nektos/act'
  terraform-cloud-enterprise:
    name: Terraform Cloud/Enterprise
    runs-on: ubuntu-latest
    env:
      TF_ROOT: examples/plan-json/terraform-cloud-enterprise/code
      TFC_HOST: app.terraform.io
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TFC_TOKEN }}
          cli_config_credentials_hostname: ${{ env.TFC_HOST }}
          terraform_wrapper: false
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.TF_ROOT }}
      - name: Retrieve plan JSONs
        run: >
          echo "Running terraform plan"

          terraform plan -no-color | tee /tmp/plan_logs.txt


          echo "Parsing the run URL and ID from the logs"

          run_url=$(grep -A1 'To view this run' /tmp/plan_logs.txt | tail -n 1)

          run_id=$(basename $run_url)


          echo "Getting the run plan response from
          https://$TFC_HOST/api/v2/runs/$run_id/plan"

          run_plan_resp=$(wget -q -O - --header="Authorization: Bearer ${{
          secrets.TFC_TOKEN }}" "https://$TFC_HOST/api/v2/runs/$run_id/plan")

          echo "Extracting the plan JSON path"

          plan_json_path=$(echo $run_plan_resp | sed
          's/.*\"json-output\":\"\([^\"]*\)\".*/\1/')


          echo "Downloading the plan JSON from https://$TFC_HOST$plan_json_path"

          wget -q -O plan.json --header="Authorization: Bearer ${{
          secrets.TFC_TOKEN }}" "https://$TFC_HOST$plan_json_path"
        working-directory: ${{ env.TF_ROOT }}
      - name: Setup Infracost
        uses: ./setup
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
      - name: Replace m5 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
      - name: Replace t2 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
      - name: Generate Infracost diff
        run: |
          infracost diff --path=${TF_ROOT}/plan.json \
                         --format=json \
                         --out-file=/tmp/infracost.json
      - name: Post Infracost comment
        run: |-
          infracost comment github --path=/tmp/infracost.json \
          --repo=$GITHUB_REPOSITORY \
          --github-token=${{github.token}} \
          --pull-request=1 \
          --behavior=update \
          --dry-run true \
          > /tmp/infracost_comment.md
      - run: >-
          diff -y ./testdata/terraform-cloud-enterprise_comment_golden.md
          /tmp/infracost_comment.md
        name: Check the comment
        if: env.UPDATE_GOLDEN_FILES != 'true'
      - name: Update the golden comment file
        run: >-
          cp /tmp/infracost_comment.md
          ./testdata/terraform-cloud-enterprise_comment_golden.md
        if: env.UPDATE_GOLDEN_FILES == 'true'
  terragrunt-project:
    name: Terragrunt project
    runs-on: ubuntu-latest
    env:
      TF_ROOT: examples/plan-json/terragrunt/code
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.37.0
      - name: Generate plan JSONs
        run: >
          terragrunt run-all --terragrunt-ignore-external-dependencies plan
          -out=plan.cache


          # Find the plan files

          plans=($(find . -name plan.cache | tr '\n' ' '))


          # Generate plan JSON files by running terragrunt show for each plan
          file

          planjsons=()

          for plan in "${plans[@]}"; do
            # Find the Terraform working directory for running terragrunt show
            # We want to take the dir of the plan file and strip off anything after the .terraform-cache dir
            # to find the location of the Terraform working directory that contains the Terraform code
            dir=$(dirname $plan)
            dir=$(echo "$dir" | sed 's/\(.*\)\/\.terragrunt-cache\/.*/\1/')

            echo "Running terragrunt show for $(basename $plan) for $dir";
            terragrunt show -json $(basename $plan) --terragrunt-working-dir=$dir --terragrunt-no-auto-init > $dir/plan.json
            planjsons=(${planjsons[@]} "$dir/plan.json")
          done


          # Sort the plan JSONs so we get consistent project ordering in the
          config file

          IFS=$'\n' planjsons=($(sort <<<"${planjsons[*]}"))


          # Generate Infracost config file

          echo -e "version: 0.1\n\nprojects:\n" > infracost.yml

          for planjson in "${planjsons[@]}"; do
            echo -e "  - path: ${TF_ROOT}/$planjson" >> infracost.yml
          done
        working-directory: ${{ env.TF_ROOT }}
      - name: Setup Infracost
        uses: ./setup
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
      - name: Replace m5 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
      - name: Replace t2 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
      - name: Generate Infracost diff
        run: |
          infracost diff --config-file=${TF_ROOT}/infracost.yml \
                         --format=json \
                         --out-file=/tmp/infracost.json
      - name: Post Infracost comment
        run: |-
          infracost comment github --path=/tmp/infracost.json \
          --repo=$GITHUB_REPOSITORY \
          --github-token=${{github.token}} \
          --pull-request=1 \
          --behavior=update \
          --dry-run true \
          > /tmp/infracost_comment.md
      - run: >-
          diff -y ./testdata/terragrunt-project_comment_golden.md
          /tmp/infracost_comment.md
        name: Check the comment
        if: env.UPDATE_GOLDEN_FILES != 'true'
      - name: Update the golden comment file
        run: >-
          cp /tmp/infracost_comment.md
          ./testdata/terragrunt-project_comment_golden.md
        if: env.UPDATE_GOLDEN_FILES == 'true'
  private-terraform-module:
    name: Private Terraform module
    runs-on: ubuntu-latest
    env:
      TF_ROOT: examples/private-terraform-module/code
    steps:
      - name: add GIT_SSH_KEY
        run: |
          ssh-agent -a $SSH_AUTH_SOCK
          mkdir -p ~/.ssh
          echo "${{ secrets.GIT_SSH_KEY }}" | tr -d '\r' | ssh-add -
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      - name: Checkout base branch
        uses: actions/checkout@v2
        with: {}
      - name: Setup Infracost
        uses: ./setup
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
      - name: Generate Infracost cost estimate baseline
        run: |
          infracost breakdown --path=${TF_ROOT} \
                              --format=json \
                              --out-file=/tmp/infracost-base.json
      - name: Checkout PR branch
        uses: actions/checkout@v2
      - name: Replace m5 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
      - name: Replace t2 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
      - name: Generate Infracost diff
        run: |
          infracost diff --path=${TF_ROOT} \
                              --format=json \
                              --compare-to=/tmp/infracost-base.json \
                              --out-file=/tmp/infracost.json
      - name: Post Infracost comment
        run: |-
          infracost comment github --path=/tmp/infracost.json \
          --repo=$GITHUB_REPOSITORY \
          --github-token=${{github.token}} \
          --pull-request=1 \
          --behavior=update \
          --dry-run true \
          > /tmp/infracost_comment.md
      - run: >-
          diff -y ./testdata/private-terraform-module_comment_golden.md
          /tmp/infracost_comment.md
        name: Check the comment
        if: env.UPDATE_GOLDEN_FILES != 'true'
      - name: Update the golden comment file
        run: >-
          cp /tmp/infracost_comment.md
          ./testdata/private-terraform-module_comment_golden.md
        if: env.UPDATE_GOLDEN_FILES == 'true'
  sentinel:
    name: Sentinel
    runs-on: ubuntu-latest
    env:
      TF_ROOT: examples/terraform-project/code
    steps:
      - uses: actions/checkout@v2
      - name: Setup Infracost
        uses: ./setup
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
      - name: Setup Sentinel
        run: >
          mkdir /tmp/sentinel

          curl -o /tmp/sentinel/sentinel.zip
          https://releases.hashicorp.com/sentinel/0.18.4/sentinel_0.18.4_linux_amd64.zip

          unzip -d /tmp/sentinel /tmp/sentinel/sentinel.zip

          echo "/tmp/sentinel" >> $GITHUB_PATH
      - name: Checkout base branch
        uses: actions/checkout@v2
        with: {}
      - name: Generate Infracost cost estimate baseline
        run: |
          infracost breakdown --path=${TF_ROOT} \
                              --format=json \
                              --out-file=/tmp/infracost-base.json
      - name: Checkout PR branch
        uses: actions/checkout@v2
      - name: Replace m5 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
      - name: Replace t2 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
      - name: Generate Infracost diff
        run: |
          infracost diff --path=${TF_ROOT} \
                              --format=json \
                              --compare-to=/tmp/infracost-base.json \
                              --out-file=/tmp/infracost.json
      - name: Run Sentinel
        run: >-
          sentinel apply -global breakdown="$(cat /tmp/infracost.json)"
          examples/sentinel/policy/policy.policy | tee /tmp/sentinel.out
      - name: Check Policies
        run: |
          result=$(</tmp/sentinel.out)
          if [ "$result" != "Pass - policy.policy" ]; then
            echo -e "::error::Policy check failed:\n$result"
            exit 1
          else
            echo "::info::Policy check passed."
          fi
  slack:
    name: Slack
    runs-on: ubuntu-latest
    env:
      TF_ROOT: examples/terraform-project/code
    steps:
      - name: Checkout source code so we can install the action locally
        uses: actions/checkout@v2
      - name: Setup Infracost
        uses: ./setup
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
      - name: Checkout base branch
        uses: actions/checkout@v2
        with: {}
      - name: Generate Infracost cost estimate baseline
        run: |
          infracost breakdown --path=${TF_ROOT} \
                              --format=json \
                              --out-file=/tmp/infracost-base.json
      - name: Checkout PR branch
        uses: actions/checkout@v2
      - name: Replace m5 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
      - name: Replace t2 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
      - name: Generate Infracost diff
        run: |
          infracost diff --path=${TF_ROOT} \
                           --format=json \
                           --compare-to=/tmp/infracost-base.json \
                           --out-file=/tmp/infracost.json
      - name: Post Infracost comment
        run: |-
          infracost comment github --path=/tmp/infracost.json \
          --repo=$GITHUB_REPOSITORY \
          --github-token=${{github.token}} \
          --pull-request=1 \
          --behavior=update \
          --dry-run true \
          > /tmp/infracost_comment.md
      - run: diff -y ./testdata/slack_comment_golden.md /tmp/infracost_comment.md
        name: Check the comment
        if: env.UPDATE_GOLDEN_FILES != 'true'
      - name: Update the golden comment file
        run: cp /tmp/infracost_comment.md ./testdata/slack_comment_golden.md
        if: env.UPDATE_GOLDEN_FILES == 'true'
      - name: Generate Slack message
        id: infracost-slack
        run: >
          echo "::set-output name=slack-message::$(infracost output
          --path=/tmp/infracost.json --format=slack-message --show-skipped)"

          echo "::set-output name=diffTotalMonthlyCost::$(jq
          '(.diffTotalMonthlyCost // 0) | tonumber' /tmp/infracost.json)"
      - name: Generate Slack message
        run: >-
          infracost output --path=/tmp/infracost.json --format=slack-message
          --show-skipped --out-file=/tmp/infracost_slack_message.json
      - name: Check the Slack message
        run: >-
          diff -y <(jq --sort-keys . ./testdata/slack_slack_message_golden.json)
          <(jq --sort-keys . /tmp/infracost_slack_message.json)
        if: env.UPDATE_GOLDEN_FILES != 'true'
      - name: Update the golden Slack message file
        run: >-
          jq --sort-keys . /tmp/infracost_slack_message.json >
          ./testdata/slack_slack_message_golden.json
        if: env.UPDATE_GOLDEN_FILES == 'true'
  terraform-project:
    name: Terraform project
    runs-on: ubuntu-latest
    env:
      TF_ROOT: examples/terraform-project/code
    steps:
      - name: Checkout source code so we can install the action locally
        uses: actions/checkout@v2
      - name: Setup Infracost
        uses: ./setup
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
      - name: Checkout base branch
        uses: actions/checkout@v2
        with: {}
      - name: Generate Infracost cost estimate baseline
        run: |
          infracost breakdown --path=${TF_ROOT} \
                              --format=json \
                              --out-file=/tmp/infracost-base.json
      - name: Checkout PR branch
        uses: actions/checkout@v2
      - name: Replace m5 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
      - name: Replace t2 instance
        run: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
      - name: Generate Infracost diff
        run: |
          infracost diff --path=${TF_ROOT} \
                              --format=json \
                              --compare-to=/tmp/infracost-base.json \
                              --out-file=/tmp/infracost.json
      - name: Post Infracost comment
        run: |-
          infracost comment github --path=/tmp/infracost.json \
          --repo=$GITHUB_REPOSITORY \
          --github-token=${{github.token}} \
          --pull-request=1 \
          --behavior=update \
          --dry-run true \
          > /tmp/infracost_comment.md
      - run: >-
          diff -y ./testdata/terraform-project_comment_golden.md
          /tmp/infracost_comment.md
        name: Check the comment
        if: env.UPDATE_GOLDEN_FILES != 'true'
      - name: Update the golden comment file
        run: >-
          cp /tmp/infracost_comment.md
          ./testdata/terraform-project_comment_golden.md
        if: env.UPDATE_GOLDEN_FILES == 'true'
